{"ast":null,"code":"import axios from 'axios';\nimport { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL, ORDER_DETAILS_FAIL, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_REQUEST, ORDER_PAY_FAIL, ORDER_PAY_SUCCESS, ORDER_PAY_REQUEST, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_LIST_MY_FAIL, ORDER_LIST_FAIL, ORDER_LIST_SUCCESS, ORDER_LIST_REQUEST, ORDER_DELIVER_FAIL, ORDER_DELIVER_SUCCESS, ORDER_DELIVER_REQUEST } from '../constants/orderConstants';\nimport { logout } from './userActions';\nexport const createOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/orders`, order, config);\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const getOrderDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/${id}`, config);\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: message\n    });\n  }\n};\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config);\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: message\n    });\n  }\n};\nexport const deliverOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DELIVER_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/orders/${order._id}/deliver`, {}, config);\n    dispatch({\n      type: ORDER_DELIVER_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: ORDER_DELIVER_FAIL,\n      payload: message\n    });\n  }\n};\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_MY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/myorders`, config);\n    dispatch({\n      type: ORDER_LIST_MY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: ORDER_LIST_MY_FAIL,\n      payload: message\n    });\n  }\n};\nexport const listOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders`, config);\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/chadhindsight/Desktop/pro-shop/frontend/src/actions/orderActions.js"],"names":["axios","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_FAIL","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_REQUEST","ORDER_PAY_FAIL","ORDER_PAY_SUCCESS","ORDER_PAY_REQUEST","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_FAIL","ORDER_LIST_SUCCESS","ORDER_LIST_REQUEST","ORDER_DELIVER_FAIL","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_REQUEST","logout","createOrder","order","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","post","payload","error","message","response","getOrderDetails","id","get","payOrder","orderId","paymentResult","put","deliverOrder","_id","listMyOrders","listOrders"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport {\n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_CREATE_FAIL,\n    ORDER_DETAILS_FAIL,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_REQUEST,\n    ORDER_PAY_FAIL,\n    ORDER_PAY_SUCCESS,\n    ORDER_PAY_REQUEST,\n    ORDER_LIST_MY_REQUEST,\n    ORDER_LIST_MY_SUCCESS,\n    ORDER_LIST_MY_FAIL,\n    ORDER_LIST_FAIL,\n    ORDER_LIST_SUCCESS,\n    ORDER_LIST_REQUEST,\n    ORDER_DELIVER_FAIL,\n    ORDER_DELIVER_SUCCESS,\n    ORDER_DELIVER_REQUEST,\n} from '../constants/orderConstants'\nimport { logout } from './userActions'\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_CREATE_REQUEST,\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        }\n\n        const { data } = await axios.post(`/api/orders`, order, config)\n\n        dispatch({\n            type: ORDER_CREATE_SUCCESS,\n            payload: data,\n        })\n    } catch (error) {\n        const message =\n            error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        if (message === 'Not authorized, token failed') {\n            dispatch(logout())\n        }\n        dispatch({\n            type: ORDER_CREATE_FAIL,\n            payload: message,\n        })\n    }\n}\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DETAILS_REQUEST,\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        }\n\n        const { data } = await axios.get(`/api/orders/${id}`, config)\n\n        dispatch({\n            type: ORDER_DETAILS_SUCCESS,\n            payload: data,\n        })\n    } catch (error) {\n        const message =\n            error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        if (message === 'Not authorized, token failed') {\n            dispatch(logout())\n        }\n        dispatch({\n            type: ORDER_DETAILS_FAIL,\n            payload: message,\n        })\n    }\n}\n\nexport const payOrder = (orderId, paymentResult) => async (\n    dispatch,\n    getState\n) => {\n    try {\n        dispatch({\n            type: ORDER_PAY_REQUEST,\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        }\n\n        const { data } = await axios.put(\n            `/api/orders/${orderId}/pay`,\n            paymentResult,\n            config\n        )\n\n        dispatch({\n            type: ORDER_PAY_SUCCESS,\n            payload: data,\n        })\n    } catch (error) {\n        const message =\n            error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        if (message === 'Not authorized, token failed') {\n            dispatch(logout())\n        }\n        dispatch({\n            type: ORDER_PAY_FAIL,\n            payload: message,\n        })\n    }\n}\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DELIVER_REQUEST,\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        }\n\n        const { data } = await axios.put(\n            `/api/orders/${order._id}/deliver`,\n            {},\n            config\n        )\n\n        dispatch({\n            type: ORDER_DELIVER_SUCCESS,\n            payload: data,\n        })\n    } catch (error) {\n        const message =\n            error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        if (message === 'Not authorized, token failed') {\n            dispatch(logout())\n        }\n        dispatch({\n            type: ORDER_DELIVER_FAIL,\n            payload: message,\n        })\n    }\n}\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_MY_REQUEST,\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        }\n\n        const { data } = await axios.get(`/api/orders/myorders`, config)\n\n        dispatch({\n            type: ORDER_LIST_MY_SUCCESS,\n            payload: data,\n        })\n    } catch (error) {\n        const message =\n            error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        if (message === 'Not authorized, token failed') {\n            dispatch(logout())\n        }\n        dispatch({\n            type: ORDER_LIST_MY_FAIL,\n            payload: message,\n        })\n    }\n}\n\nexport const listOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_REQUEST,\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        }\n\n        const { data } = await axios.get(`/api/orders`, config)\n\n        dispatch({\n            type: ORDER_LIST_SUCCESS,\n            payload: data,\n        })\n    } catch (error) {\n        const message =\n            error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        if (message === 'Not authorized, token failed') {\n            dispatch(logout())\n        }\n        dispatch({\n            type: ORDER_LIST_FAIL,\n            payload: message,\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}