{"ast":null,"code":"//This file is where you connect all your reducers & stuff like that. Batman\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer, productCreateReducer, productUpdateReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userLoginReducer, userRegisterReducer, userUpdateReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer } from './reducers/usersReducers';\nimport { orderCreateReducer, orderDetailsReducer, orderListMyReducer, orderListReducer, orderPayReducer } from './reducers/orderReducers'; // Reducers\n\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userDetails: userDetailsReducer,\n  userUpdate: userUpdateReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  orderCreate: orderCreateReducer,\n  orderPay: orderPayReducer,\n  orderListMy: orderListMyReducer,\n  orderDetails: orderDetailsReducer,\n  orderList: orderListReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : [];\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress ') ? JSON.parse(localStorage.getItem('shippingAddress ')) : {};\nconst initialState = {\n  cartItems: {\n    cartItemsFromStorage\n  },\n  shippingAddress: {\n    shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/Users/chadhindsight/Desktop/pro-shop/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","productCreateReducer","productUpdateReducer","cartReducer","userLoginReducer","userRegisterReducer","userUpdateReducer","userDetailsReducer","userUpdateProfileReducer","userListReducer","userDeleteReducer","orderCreateReducer","orderDetailsReducer","orderListMyReducer","orderListReducer","orderPayReducer","reducer","productList","productDetails","cart","userLogin","userRegister","userList","userDelete","userDetails","userUpdate","userUpdateProfile","productCreate","productUpdate","orderCreate","orderPay","orderListMy","orderDetails","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"mappings":"AAAA;AACA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,kBAAT,EAA6BC,qBAA7B,EAAoDC,oBAApD,EAA0EC,oBAA1E,QAAsG,4BAAtG;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SACIC,gBADJ,EAEIC,mBAFJ,EAGIC,iBAHJ,EAIIC,kBAJJ,EAKIC,wBALJ,EAMIC,eANJ,EAMqBC,iBANrB,QAOO,0BAPP;AASA,SAASC,kBAAT,EAA6BC,mBAA7B,EAAkDC,kBAAlD,EAAsEC,gBAAtE,EAAwFC,eAAxF,QAA+G,0BAA/G,C,CACA;;AACA,MAAMC,OAAO,GAAGrB,eAAe,CAAC;AAC5BsB,EAAAA,WAAW,EAAElB,kBADe;AAE5BmB,EAAAA,cAAc,EAAElB,qBAFY;AAG5BmB,EAAAA,IAAI,EAAEhB,WAHsB;AAI5BiB,EAAAA,SAAS,EAAEhB,gBAJiB;AAK5BiB,EAAAA,YAAY,EAAEhB,mBALc;AAM5BiB,EAAAA,QAAQ,EAAEb,eANkB;AAO5Bc,EAAAA,UAAU,EAAEb,iBAPgB;AAQ5Bc,EAAAA,WAAW,EAAEjB,kBARe;AAS5BkB,EAAAA,UAAU,EAAEnB,iBATgB;AAU5BoB,EAAAA,iBAAiB,EAAElB,wBAVS;AAW5BmB,EAAAA,aAAa,EAAE1B,oBAXa;AAY5B2B,EAAAA,aAAa,EAAE1B,oBAZa;AAa5B2B,EAAAA,WAAW,EAAElB,kBAbe;AAc5BmB,EAAAA,QAAQ,EAAEf,eAdkB;AAe5BgB,EAAAA,WAAW,EAAElB,kBAfe;AAgB5BmB,EAAAA,YAAY,EAAEpB,mBAhBc;AAiB5BqB,EAAAA,SAAS,EAAEnB;AAjBiB,CAAD,CAA/B;AAqBA,MAAMoB,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACvBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADuB,GAEvB,EAFN;AAIA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IACtBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADsB,GAEtB,EAFN;AAIA,MAAMI,0BAA0B,GAAGL,YAAY,CAACC,OAAb,CAAqB,kBAArB,IAC7BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,kBAArB,CAAX,CAD6B,GAE7B,EAFN;AAKA,MAAMK,YAAY,GAAG;AACjBC,EAAAA,SAAS,EAAE;AAAER,IAAAA;AAAF,GADM;AAEjBS,EAAAA,eAAe,EAAE;AAAEH,IAAAA;AAAF,GAFA;AAGjBpB,EAAAA,SAAS,EAAE;AAAEwB,IAAAA,QAAQ,EAAEL;AAAZ;AAHM,CAArB;AAKA,MAAMM,UAAU,GAAG,CAAChD,KAAD,CAAnB;AAEA,MAAMiD,KAAK,GAAGpD,WAAW,CACrBsB,OADqB,EAErByB,YAFqB,EAGrB3C,mBAAmB,CAACF,eAAe,CAAC,GAAGiD,UAAJ,CAAhB,CAHE,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["//This file is where you connect all your reducers & stuff like that. Batman\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer, productCreateReducer, productUpdateReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport {\n    userLoginReducer,\n    userRegisterReducer,\n    userUpdateReducer,\n    userDetailsReducer,\n    userUpdateProfileReducer,\n    userListReducer, userDeleteReducer\n} from './reducers/usersReducers';\n\nimport { orderCreateReducer, orderDetailsReducer, orderListMyReducer, orderListReducer, orderPayReducer } from './reducers/orderReducers';\n// Reducers\nconst reducer = combineReducers({\n    productList: productListReducer,\n    productDetails: productDetailsReducer,\n    cart: cartReducer,\n    userLogin: userLoginReducer,\n    userRegister: userRegisterReducer,\n    userList: userListReducer,\n    userDelete: userDeleteReducer,\n    userDetails: userDetailsReducer,\n    userUpdate: userUpdateReducer,\n    userUpdateProfile: userUpdateProfileReducer,\n    productCreate: productCreateReducer,\n    productUpdate: productUpdateReducer,\n    orderCreate: orderCreateReducer,\n    orderPay: orderPayReducer,\n    orderListMy: orderListMyReducer,\n    orderDetails: orderDetailsReducer,\n    orderList: orderListReducer\n\n})\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\n    ? JSON.parse(localStorage.getItem('cartItems'))\n    : []\n\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n    ? JSON.parse(localStorage.getItem('userInfo'))\n    : []\n\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress ')\n    ? JSON.parse(localStorage.getItem('shippingAddress '))\n    : {}\n\n\nconst initialState = {\n    cartItems: { cartItemsFromStorage },\n    shippingAddress: { shippingAddressFromStorage },\n    userLogin: { userInfo: userInfoFromStorage }\n}\nconst middleware = [thunk]\n\nconst store = createStore(\n    reducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleware))\n)\n\nexport default store;"]},"metadata":{},"sourceType":"module"}