{"ast":null,"code":"import { PRODUCTS_LIST_REQUEST, PRODUCTS_LIST_FAIL, PRODUCTS_LIST_SUCCESS } from '../constants/productConstants';\nimport axios from 'axios'; // Actions\n\nexport const list = () => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCTS_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('/api/products');\n    dispatch({\n      type: PRODUCTS_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCTS_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/chadhindsight/Desktop/pro-shop/frontend/src/actions/productActions.js"],"names":["PRODUCTS_LIST_REQUEST","PRODUCTS_LIST_FAIL","PRODUCTS_LIST_SUCCESS","axios","list","dispatch","type","data","get","payload","error","response","message"],"mappings":"AAAA,SACIA,qBADJ,EAEIC,kBAFJ,EAGIC,qBAHJ,QAIO,+BAJP;AAKA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAO,MAAMC,IAAI,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAC1C,MAAI;AACAA,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEN;AADD,KAAD,CAAR;AAGA,UAAM;AAAEO,MAAAA;AAAF,QAAW,MAAMJ,KAAK,CAACK,GAAN,CAAU,eAAV,CAAvB;AACAH,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEJ,qBADD;AAELO,MAAAA,OAAO,EAAEF;AAFJ,KAAD,CAAR;AAKH,GAVD,CAUE,OAAOG,KAAP,EAAc;AACZL,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEL,kBADD;AAELQ,MAAAA,OAAO,EAAEC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAAtC,GAAgDF,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAApE,GAA8EF,KAAK,CAACE;AAFxF,KAAD,CAAR;AAIH;AACJ,CAjBM","sourcesContent":["import {\n    PRODUCTS_LIST_REQUEST,\n    PRODUCTS_LIST_FAIL,\n    PRODUCTS_LIST_SUCCESS\n} from '../constants/productConstants'\nimport axios from 'axios';\n// Actions\nexport const list = () => async (dispatch) => {\n    try {\n        dispatch({\n            type: PRODUCTS_LIST_REQUEST\n        })\n        const { data } = await axios.get('/api/products')\n        dispatch({\n            type: PRODUCTS_LIST_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCTS_LIST_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}