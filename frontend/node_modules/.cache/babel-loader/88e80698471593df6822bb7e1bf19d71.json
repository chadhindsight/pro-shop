{"ast":null,"code":"import _slicedToArray from\"/Users/chadhindsight/Desktop/pro-shop/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{Form,Button}from'react-bootstrap';import{useDispatch,useSelector}from'react-redux';import FormContainer from'../components/FormContainer';import CheckoutSteps from'../components/CheckoutSteps';import{saveShippingAddress}from'../actions/cartActions';var ShippingScreen=function ShippingScreen(_ref){var history=_ref.history;var cart=useSelector(function(state){return state.cart;});var shippingAddress=cart.shippingAddress;var _useState=useState(shippingAddress.address),_useState2=_slicedToArray(_useState,2),address=_useState2[0],setAddress=_useState2[1];var _useState3=useState(shippingAddress.city),_useState4=_slicedToArray(_useState3,2),city=_useState4[0],setCity=_useState4[1];var _useState5=useState(shippingAddress.postalCode),_useState6=_slicedToArray(_useState5,2),postalCode=_useState6[0],setPostalCode=_useState6[1];var _useState7=useState(shippingAddress.country),_useState8=_slicedToArray(_useState7,2),country=_useState8[0],setCountry=_useState8[1];var dispatch=useDispatch();var submitHandler=function submitHandler(e){e.preventDefault();dispatch(saveShippingAddress({address:address,city:city,postalCode:postalCode,country:country}));// move to next page\nhistory.push('/payment');};return/*#__PURE__*/React.createElement(FormContainer,null,/*#__PURE__*/React.createElement(\"h1\",null,\" Shipping\"),/*#__PURE__*/React.createElement(CheckoutSteps,{step1:true,step2:true}),/*#__PURE__*/React.createElement(\"form\",{onSubmit:submitHandler},/*#__PURE__*/React.createElement(Form.Group,{controlId:\"address\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Adress\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"text\",placeholder:\"Enter address\",value:address,onChange:function onChange(e){return setAddress(e.target.value);}})),/*#__PURE__*/React.createElement(Form.Group,{controlId:\"city\"},/*#__PURE__*/React.createElement(Form.Label,null,\"City\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"text\",placeholder:\"Enter city\",value:city,onChange:function onChange(e){return setCity(e.target.value);}})),\" \",/*#__PURE__*/React.createElement(Form.Group,{controlId:\"postalCode\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Postal Code\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"text\",placeholder:\"Enter postalCode\",value:postalCode,onChange:function onChange(e){return setPostalCode(e.target.value);}})),/*#__PURE__*/React.createElement(Form.Group,{controlId:\"country\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Country\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"text\",placeholder:\"Enter country\",value:country,onChange:function onChange(e){return setCountry(e.target.value);}})),/*#__PURE__*/React.createElement(Button,{type:\"submit\",variant:\"primary\"},\"Continue\")));};export default ShippingScreen;","map":{"version":3,"sources":["/Users/chadhindsight/Desktop/pro-shop/frontend/src/screens/ShippingScreen.js"],"names":["React","useState","Form","Button","useDispatch","useSelector","FormContainer","CheckoutSteps","saveShippingAddress","ShippingScreen","history","cart","state","shippingAddress","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","dispatch","submitHandler","e","preventDefault","push","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { saveShippingAddress } from '../actions/cartActions';\n\nconst ShippingScreen = ({ history }) => {\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n    const [address, setAddress] = useState(shippingAddress.address)\n    const [city, setCity] = useState(shippingAddress.city)\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\n    const [country, setCountry] = useState(shippingAddress.country)\n\n    const dispatch = useDispatch()\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\n        // move to next page\n        history.push('/payment')\n    }\n    return (\n        <FormContainer>\n            <h1> Shipping</h1>\n            <CheckoutSteps step1 step2 />\n            <form onSubmit={submitHandler}>\n                <Form.Group controlId='address'>\n                    <Form.Label>Adress</Form.Label>\n                    <Form.Control\n                        type='text'\n                        placeholder='Enter address'\n                        value={address}\n                        onChange={(e) => setAddress(e.target.value)}\n                    ></Form.Control>\n                </Form.Group>\n                <Form.Group controlId='city'>\n                    <Form.Label>City</Form.Label>\n                    <Form.Control\n                        type='text'\n                        placeholder='Enter city'\n                        value={city}\n                        onChange={(e) => setCity(e.target.value)}\n                    ></Form.Control>\n                </Form.Group> <Form.Group controlId='postalCode'>\n                    <Form.Label>Postal Code</Form.Label>\n                    <Form.Control\n                        type='text'\n                        placeholder='Enter postalCode'\n                        value={postalCode}\n                        onChange={(e) => setPostalCode(e.target.value)}\n                    ></Form.Control>\n                </Form.Group>\n                <Form.Group controlId='country'>\n                    <Form.Label>Country</Form.Label>\n                    <Form.Control\n                        type='text'\n                        placeholder='Enter country'\n                        value={country}\n                        onChange={(e) => setCountry(e.target.value)}\n                    ></Form.Control>\n                </Form.Group>\n                <Button type=\"submit\" variant='primary'>Continue</Button>\n            </form>\n\n        </FormContainer>\n    );\n};\n\nexport default ShippingScreen;"]},"metadata":{},"sourceType":"module"}